.nh
.TH IAM(1) iam User Manuals
Eric Paris
Jan 2015

.SH NAME
.PP
iam\-apiserver \- iam\-apiserver


.SH SYNOPSIS
.PP
\fBiam\-apiserver\fP [OPTIONS]


.SH DESCRIPTION
.PP
The IAM API server validates and configures data
for the api objects which include users, policies, secrets, and
others. The API Server services REST operations to do the api objects management.

.PP
Find more iam\-apiserver information at:
https://github.com/marmotedu/iam/blob/master/docs/guide/en\-US/cmd/iam\-apiserver.md


.SH OPTIONS
.PP
\fB\-c\fP, \fB\-\-config\fP=""
	Read configuration from specified \fB\fCFILE\fR, support JSON, TOML, YAML, HCL, or Java properties formats.

.PP
\fB\-\-feature.enable\-metrics\fP=true
	Enables metrics on the apiserver at /metrics

.PP
\fB\-\-feature.profiling\fP=true
	Enable profiling via web interface host:port/debug/pprof/

.PP
\fB\-\-insecure.bind\-address\fP="127.0.0.1"
	The IP address on which to serve the \-\-insecure.bind\-port (set to 0.0.0.0 for all IPv4 interfaces and :: for all IPv6 interfaces).

.PP
\fB\-\-insecure.bind\-port\fP=8080
	The port on which to serve unsecured, unauthenticated access. It is assumed that firewall rules are set up such that this port is not reachable from outside of the deployed machine and that port 443 on the iam public address is proxied to this port. This is performed by nginx in the default setup. Set to zero to disable.

.PP
\fB\-\-log.development\fP=false
	Development puts the logger in development mode, which changes the behavior of DPanicLevel and takes stacktraces more liberally.

.PP
\fB\-\-log.disable\-caller\fP=false
	Disable output of caller information in the log.

.PP
\fB\-\-log.disable\-stacktrace\fP=false
	Disable the log to record a stack trace for all messages at or above panic level.

.PP
\fB\-\-log.enable\-color\fP=false
	Enable output ansi colors in plain format logs.

.PP
\fB\-\-log.error\-output\-paths\fP=[stderr]
	Error output paths of log.

.PP
\fB\-\-log.format\fP="console"
	Log output \fB\fCFORMAT\fR, support plain or json format.

.PP
\fB\-\-log.level\fP="info"
	Minimum log output \fB\fCLEVEL\fR\&.

.PP
\fB\-\-log.name\fP=""
	The name of the logger.

.PP
\fB\-\-log.output\-paths\fP=[stdout]
	Output paths of log.

.PP
\fB\-\-secure.bind\-address\fP="0.0.0.0"
	The IP address on which to listen for the \-\-secure.bind\-port port. The associated interface(s) must be reachable by the rest of the engine, and by CLI/web clients. If blank, all interfaces will be used (0.0.0.0 for all IPv4 interfaces and :: for all IPv6 interfaces).

.PP
\fB\-\-secure.bind\-port\fP=8443
	The port on which to serve HTTPS with authentication and authorization. It cannot be switched off with 0.

.PP
\fB\-\-secure.tls.cert\-dir\fP="/var/run/iam"
	The directory where the TLS certs are located. If \-\-secure.tls.cert\-key.cert\-file and \-\-secure.tls.cert\-key.private\-key\-file are provided, this flag will be ignored.

.PP
\fB\-\-secure.tls.cert\-key.cert\-file\fP=""
	File containing the default x509 Certificate for HTTPS. (CA cert, if any, concatenated after server cert).

.PP
\fB\-\-secure.tls.cert\-key.private\-key\-file\fP=""
	File containing the default x509 private key matching \-\-secure.tls.cert\-key.cert\-file.

.PP
\fB\-\-secure.tls.pair\-name\fP="iam"
	The name which will be used with \-\-secure.tls.cert\-dir to make a cert and key filenames. It becomes /\&.crt and /\&.key

.PP
\fB\-\-server.defaultapis\fP=[version,healthz,whoami]
	Enable some preset apis, like healthz, version,whoami...,comma separated. If this list is empty default apis will be used.

.PP
\fB\-\-server.middlewares\fP=[]
	List of allowed middlewares for server, comma separated. If this list is empty default middlewares will be used.

.PP
\fB\-\-server.mode\fP="release"
	Start the server in a specified server mode. Supported server mode: debug, test, release.

.PP
\fB\-v\fP, \fB\-\-version\fP=false
	Print version information and quit.


.SH HISTORY
.PP
January 2015, Originally compiled by Eric Paris (eparis at redhat dot com) based on the marmotedu source material, but hopefully they have been automatically generated since!
